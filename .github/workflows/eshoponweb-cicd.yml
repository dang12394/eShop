name: eShopOnWeb Build and Test

#Triggers (uncomment line below to use it)
on: workflow_dispatch

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  RESOURCE-GROUP: swa-demo
  LOCATION: southeastasia
  SUBSCRIPTION-ID: 398eae33-1529-42af-950d-8feca8144acf
  WEBAPP-NAME: dang12394
  TF_CLOUD_ORGANIZATION: "dang12394"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "swa-db-azure"
  CONFIG_DIRECTORY: "./"
  DATABASE_CONNECTION_STRING: "${{ secrets.DATABASE_CONNECTION_STRING }}"


jobs:
  #Build, test and publish .net web project in repository
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    #checkout the repository
    - uses: actions/checkout@v4
    #prepare runner for desired .net version SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'preview'
    #Build/Test/Publish the .net project
    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    - name: dotnet publish
      run: |
        dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
        cd ${{env.DOTNET_ROOT}}/myapp
        zip -r ../app.zip .
    # upload the published website code artifacts
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/app.zip

  #Terraform jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: buildandtest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"   
        
  # Publish webapp 
  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    environment:
      name: 'Development'
    steps:
    
    #Download the publish files created in previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: .net-app
        path: .net-app
  
        
   
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
            
    
    # Publish website to Azure App Service (WebApp)
    # Step disabled due to issue where the site sometimes can't be found: https://github.com/microsoft/pipelines-appservice-lib/issues/56. Instead deploy using CLI
    - name: Publish Website to WebApp
      if: false #Disable step due to comment above
      uses: Azure/webapps-deploy@v3
      with:
        type: ZIP
        app-name: ${{ env.WEBAPP-NAME  }}
        package: .net-app/app.zip

    # Publish website to Azure App Service using CLI (WebApp)
    - name: Publish Website to WebApp
      uses: Azure/cli@v2
      with:
        inlineScript: |
             az webapp deploy --name ${{ env.WEBAPP-NAME }} --resource-group ${{ env.RESOURCE-GROUP }} --src-path .net-app/app.zip --type zip
